{"ast":null,"code":"import _classCallCheck from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ali/Documents/GitHub/youtube-react-app/src/YoutubeSearch.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport 'jquery-ui/ui/widgets/autocomplete.js';\nimport 'jquery-ui/themes/base/autocomplete.css';\nimport 'jquery-ui/themes/base/jquery-ui/jquery-ui.css'; //url: \"https://suggestqueries.google.com/complete/search?hl=en&ds=yt&client=youtube&hjson=t&cp=1&q=\"+query+\"&key=\"+apiKey+\"&format=5&alt=json&callback=?\",\n\nvar API = 'AIzaSyAxjAvIUVI4pfPv1MF0mMefSqQ2PSy_GuQ';\nvar result = 5;\n\nvar YoutubeSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(YoutubeSearch, _React$Component);\n\n  function YoutubeSearch(props) {\n    var _this;\n\n    _classCallCheck(this, YoutubeSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YoutubeSearch).call(this, props));\n\n    _this.onClickHandler = function () {\n      var input = document.getElementById(\"youtube\").value;\n\n      _this.setState({\n        inputvalue: input\n      });\n    };\n\n    _this.state = {\n      resultyt: [],\n      inputvalue: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(YoutubeSearch, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      var url = \"https://www.googleapis.com/youtube/v3/search?key=\".concat(API, \"&part=snippet,id&order=date&maxResults=\").concat(result, \"&q=\");\n      url += this.state.inputvalue;\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var resultyt = responseJson.items.map(function (obj) {\n          return \"https://www.youtube.com/embed/\" + obj.id.videoId;\n        });\n\n        _this2.setState({\n          resultyt: resultyt\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $(\"#youtube\").autocomplete({\n        source: function source(request, response) {\n          var apiKey = 'AIzaSyAxjAvIUVI4pfPv1MF0mMefSqQ2PSy_GuQ';\n          var query = request.term;\n          $.ajax({\n            url: \"https://suggestqueries.google.com/complete/search?hl=en&ds=yt&client=youtube&hjson=t&cp=1&q=\" + query + \"&key=\" + apiKey + \"&format=5&alt=json&callback=?\",\n            dataType: 'jsonp',\n            success: function success(data, textStatus, request) {\n              response($.map(data[1], function (item) {\n                return {\n                  label: item[0],\n                  value: item[0]\n                };\n              }));\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Youtube Video Search With Form Auto Complete\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        id: \"youtube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"submit\",\n        className: \"form-button2\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Search\")), this.state.resultyt.map(function (link, i) {\n        console.log(link);\n        var frame = React.createElement(\"div\", {\n          className: \"container youtube\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \" \", React.createElement(\"iframe\", {\n          key: i,\n          width: \"560\",\n          height: \"315\",\n          src: link,\n          frameBorder: \"0\",\n          allowFullScreen: true,\n          title: \"Youtube Video\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), \" \");\n        return frame;\n      }), this.frame, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return YoutubeSearch;\n}(React.Component);\n\nexport default YoutubeSearch;","map":{"version":3,"sources":["/Users/ali/Documents/GitHub/youtube-react-app/src/YoutubeSearch.js"],"names":["React","$","API","result","YoutubeSearch","props","onClickHandler","input","document","getElementById","value","setState","inputvalue","state","resultyt","handleSubmit","bind","event","url","fetch","then","response","json","responseJson","items","map","obj","id","videoId","catch","error","console","autocomplete","source","request","apiKey","query","term","ajax","dataType","success","data","textStatus","item","label","link","i","log","frame","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery'\nimport 'jquery-ui/ui/widgets/autocomplete.js';\nimport 'jquery-ui/themes/base/autocomplete.css';\nimport 'jquery-ui/themes/base/jquery-ui/jquery-ui.css';\n\n//url: \"https://suggestqueries.google.com/complete/search?hl=en&ds=yt&client=youtube&hjson=t&cp=1&q=\"+query+\"&key=\"+apiKey+\"&format=5&alt=json&callback=?\",\nconst API = 'AIzaSyAxjAvIUVI4pfPv1MF0mMefSqQ2PSy_GuQ'\nconst result = 5;\n\nclass YoutubeSearch extends React.Component{\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      resultyt: [],\n      inputvalue: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onClickHandler = ()=>{\n    const input = document.getElementById(\"youtube\").value;\n    this.setState({inputvalue:input});\n  };\n\n  handleSubmit(event) {\n    var url = `https://www.googleapis.com/youtube/v3/search?key=${API}&part=snippet,id&order=date&maxResults=${result}&q=`\n\n    url+=this.state.inputvalue;\n    fetch(url)\n    .then((response) => response.json())\n    .then((responseJson) => {\n      const resultyt = responseJson.items.map(obj => \"https://www.youtube.com/embed/\"+obj.id.videoId);\n      this.setState({resultyt});\n    })\n\n    .catch((error) => {\n      console.error(error);\n    });\n  };\n\n  componentDidMount() {\n    $(\"#youtube\").autocomplete({\n      source: function(request, response){\n        var apiKey = 'AIzaSyAxjAvIUVI4pfPv1MF0mMefSqQ2PSy_GuQ';\n        var query = request.term;\n        $.ajax({\n          url: \"https://suggestqueries.google.com/complete/search?hl=en&ds=yt&client=youtube&hjson=t&cp=1&q=\"+query+\"&key=\"+apiKey+\"&format=5&alt=json&callback=?\",\n          dataType: 'jsonp',\n          success: function(data, textStatus, request) {\n            response( $.map( data[1], function(item) {\n              return {\n                label: item[0],\n                value: item[0]\n              }\n            }));\n          }\n        });\n      }\n    });\n\n  }\n\n  render(){\n    return(\n      <div>\n\n        <form onSubmit={this.handleSubmit}>\n          <h1 id=\"video\">Youtube Video Search With Form Auto Complete</h1>\n          <input type=\"text\" className=\"form-input\" id=\"youtube\"/> <br></br>\n          <button id=\"submit\" className=\"form-button2\" onClick={this.onClickHandler}>Search</button>\n        </form>{\n          this.state.resultyt.map((link, i) => {\n            console.log(link);\n            var frame = <div className=\"container youtube\"> <iframe key={i} width=\"560\" height=\"315\" src={link} frameBorder=\"0\" allowFullScreen title=\"Youtube Video\"></iframe> </div>\n            return frame;\n          })\n        }\n        {this.frame}\n\n        <hr></hr>\n      </div>\n    );\n  }\n\n}\nexport default YoutubeSearch;\n"]},"metadata":{},"sourceType":"module"}