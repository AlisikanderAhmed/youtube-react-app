{"ast":null,"code":"import _classCallCheck from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ali/Documents/GitHub/youtube-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ali/Documents/GitHub/youtube-react-app/src/Youtube.js\";\nimport React, { Component } from 'react';\nvar API = 'AIzaSyAxjAvIUVI4pfPv1MF0mMefSqQ2PSy_GuQ';\nvar result = 5;\nvar results = '';\n\nvar Youtube =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Youtube, _Component);\n\n  function Youtube(props) {\n    var _this;\n\n    _classCallCheck(this, Youtube);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Youtube).call(this, props));\n    _this.state = {\n      showResults: false\n    };\n\n    _this.onClickHandler = function () {\n      _this.setState({\n        showResults: true\n      });\n    };\n\n    _this.state = {\n      resultyt: [],\n      value: '',\n      channelname: '',\n      channelicon: '',\n      channelid: '',\n      channelcreated: '',\n      description: '',\n      statistics: []\n    };\n    _this.clicked = _this.clicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Youtube, [{\n    key: \"clicked\",\n    value: function clicked() {\n      var _this2 = this;\n\n      var url = \"https://www.googleapis.com/youtube/v3/search?key=\".concat(API, \"&part=snippet,id&order=date&maxResults=\").concat(result, \"&channelId=\");\n      url += this.state.channelid;\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var resultyt = responseJson.items.map(function (obj) {\n          return \"https://www.youtube.com/embed/\" + obj.id.videoId;\n        });\n\n        _this2.setState({\n          resultyt: resultyt\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this3 = this;\n\n      var channelurl = \"https://www.googleapis.com/youtube/v3/channels?part=snippet%2CcontentDetails%2Cstatistics&key=\".concat(API, \"&forUsername=\");\n      event.preventDefault();\n      channelurl += this.state.value;\n      fetch(channelurl).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var channelname = responseJson.items[0].snippet.title;\n        var channelicon = responseJson.items[0].snippet.thumbnails.default.url;\n        var channelcreated = responseJson.items[0].snippet.publishedAt;\n        var statistics = responseJson.items[0].statistics;\n        var description = responseJson.items[0].snippet.description;\n        var channelid = responseJson.items[0].id;\n\n        _this3.setState({\n          channelid: channelid\n        });\n\n        _this3.setState({\n          description: description\n        });\n\n        _this3.setState({\n          statistics: statistics\n        });\n\n        _this3.setState({\n          channelcreated: channelcreated\n        });\n\n        _this3.setState({\n          channelname: channelname\n        });\n\n        _this3.setState({\n          channelicon: channelicon\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    //value={this.state.value}\n    //Smoove7182954\n    value: function render() {\n      console.log(this.state.showResults);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        list: \"default-values\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"datalist\", {\n        id: \"default-values\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"Ebay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"PayPal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"form-button\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Search\"), this.state.showResults ? results = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" Channel Name: \", this.state.channelname, \" \"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \" Date Created: \", this.state.channelcreated.substring(0, 10), \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" \", this.state.description, \" \", React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \" \"), React.createElement(\"img\", {\n        src: this.state.channelicon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" View Count: \", this.state.statistics.viewCount, \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \" Youtuber's Comment Count: \", this.state.statistics.commentCount, \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \" Subscriber Count: \", this.state.statistics.subscriberCount, \" \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" Video Count: \", this.state.statistics.videoCount, \" \")) : null, \"    \"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"recent-h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Most Recent Youtube Videos\"), React.createElement(\"button\", {\n        onClick: this.clicked,\n        className: \"form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Fetch Most Recent Videos\"), this.state.resultyt.map(function (link, i) {\n        console.log(link);\n        var frame = React.createElement(\"div\", {\n          className: \"youtube\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \" \", React.createElement(\"iframe\", {\n          key: i,\n          width: \"560\",\n          height: \"315\",\n          src: link,\n          frameBorder: \"0\",\n          allowFullScreen: true,\n          title: \"Youtube Video\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }), \" \");\n        return frame;\n      }), this.frame, React.createElement(\"hr\", {\n        className: \"hr-extra\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Youtube;\n}(Component);\n\nexport default Youtube;","map":{"version":3,"sources":["/Users/ali/Documents/GitHub/youtube-react-app/src/Youtube.js"],"names":["React","Component","API","result","results","Youtube","props","state","showResults","onClickHandler","setState","resultyt","value","channelname","channelicon","channelid","channelcreated","description","statistics","clicked","bind","handleChange","handleSubmit","url","fetch","then","response","json","responseJson","items","map","obj","id","videoId","catch","error","console","event","target","channelurl","preventDefault","snippet","title","thumbnails","default","publishedAt","log","substring","viewCount","commentCount","subscriberCount","videoCount","link","i","frame"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nconst API = 'AIzaSyAxjAvIUVI4pfPv1MF0mMefSqQ2PSy_GuQ'\nconst result = 5;\nvar results = '';\n\nclass Youtube extends Component {\n  state = { showResults: false};\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      resultyt: [],\n      value: '',\n      channelname: '',\n      channelicon: '',\n      channelid: '',\n      channelcreated: '',\n      description: '',\n      statistics: []\n    };\n\n    this.clicked = this.clicked.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  clicked(){\n    var url = `https://www.googleapis.com/youtube/v3/search?key=${API}&part=snippet,id&order=date&maxResults=${result}&channelId=`\n\n    url+=this.state.channelid;\n    fetch(url)\n    .then((response) => response.json())\n    .then((responseJson) => {\n      const resultyt = responseJson.items.map(obj => \"https://www.youtube.com/embed/\"+obj.id.videoId);\n      this.setState({resultyt});\n    })\n\n    .catch((error) => {\n      console.error(error);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    var channelurl = `https://www.googleapis.com/youtube/v3/channels?part=snippet%2CcontentDetails%2Cstatistics&key=${API}&forUsername=`\n    event.preventDefault();\n\n    channelurl += this.state.value;\n\n    fetch(channelurl)\n    .then((response) => response.json())\n    .then((responseJson) => {\n      const channelname = responseJson.items[0].snippet.title;\n      const channelicon = responseJson.items[0].snippet.thumbnails.default.url;\n      const channelcreated = responseJson.items[0].snippet.publishedAt;\n      const statistics = responseJson.items[0].statistics;\n      const description = responseJson.items[0].snippet.description;\n      const channelid = responseJson.items[0].id;\n\n      this.setState({channelid});\n      this.setState({description});\n      this.setState({statistics});\n      this.setState({channelcreated});\n      this.setState({channelname});\n      this.setState({channelicon});\n    })\n\n    .catch((error) => {\n      console.error(error);\n    });\n  }\n\n  onClickHandler = ()=>{\n    this.setState({showResults: true});\n  };\n\n  //value={this.state.value}\n  //Smoove7182954\n\n  render(){\n    console.log(this.state.showResults);\n\n    return(\n      <div>\n\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <label>\n            <input type=\"text\" className=\"form-input\" value={this.state.value} onChange={this.handleChange} list=\"default-values\"required/>\n          </label>\n\n          <datalist id=\"default-values\">\n            <option value=\"Google\" />\n            <option value=\"Ebay\" />\n            <option value=\"PayPal\" />\n          </datalist><br></br>\n\n        <button type=\"submit\" className=\"form-button\" onClick={this.onClickHandler}>Search</button>\n          {this.state.showResults ? results = (\n              <div>\n                <h1> Channel Name: {this.state.channelname} </h1>\n                <h1> Date Created: {this.state.channelcreated.substring(0,10)} </h1>\n                <h2> {this.state.description} <hr></hr> </h2>\n                <img src={this.state.channelicon} alt=\"\"></img>\n\n                <h2> View Count: {this.state.statistics.viewCount} </h2>\n                <h2> Youtuber's Comment Count: {this.state.statistics.commentCount} </h2>\n                <h2> Subscriber Count: {this.state.statistics.subscriberCount} </h2>\n                <h2> Video Count: {this.state.statistics.videoCount} </h2>\n\n              </div>) : null }    {/*  Only Show Results Once Clicked else null*/}\n        </form>\n\n        <hr></hr>\n        <h1 className=\"recent-h1\">Most Recent Youtube Videos</h1>\n        <button onClick={this.clicked} className=\"form-button\">Fetch Most Recent Videos</button>\n        {\n          this.state.resultyt.map((link, i) => {\n            console.log(link);\n            var frame = <div className=\"youtube\"> <iframe key={i} width=\"560\" height=\"315\" src={link} frameBorder=\"0\" allowFullScreen title=\"Youtube Video\"></iframe> </div>\n            return frame;\n          })\n        }\n        {this.frame}\n        <hr className=\"hr-extra\"></hr>\n      </div>\n    );\n  }\n}\n\nexport default Youtube;\n"]},"metadata":{},"sourceType":"module"}